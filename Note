Задача: разработать новостное приложение для iOS.

Требуется разработать мобильное приложение для чтения новостей с сайта https://newsapi.org

Требования:

1.    Интерфейс:
a.    В таблице должен отображаться список новостей, отсортированных по дате.
b.    Каждой новости должна соответствовать своя ячейка с:
i.    Наименованием источника
ii.    Датой новости формата (dd.MM.yyyy HH:mm)
iii.    Заголовком (2 строки максимум)
iv.    Изображением новости (если нет, то дефолтное изображение на Ваш вкус)
c.    При выборе новости должна открываться страница с основной новостью по ссылке из ключа «url»
i.    Новость следует открывать в WKWebView на новом экране.
PS: Над UI сильно усердствовать не надо.

2.    Взаимодействие с сервером:
a.    Новости должны загружаться из источника: https://newsapi.org/v2/top-headlines?country=ru&apiKey=ВашApiKey
b.    Загрузка должна производиться:
i.    При первом запуске приложения.
ii.    Путём выполнения действия «Pull to Refresh» в списке новостей.
iii.    При прокрутке новостей должен выполняться InfinityScroll следующей пачки новостей
iv.    Должно подгружаться по 20 новостей

3.    Хранение данных (необязательное задание «со звёздочкой»):
a.    Загруженные новости должны размещаться в локальной БД SQLite/CoreData или Realm
b.    Новости должны быть доступны для просмотра в режиме «офлайн» (при недоступных сетевых подключениях)

4.    Архитектура («со звёздочкой»):
a.    Должно быть продемонстрировано знание паттернов проектирования (как интерфейсных – MVC/MVVM/MVP, так и архитектурных – разделение приложения на слои, «чистая архитектура», «инверсия зависимостей», вот это всё).
b.    Должно быть продемонстрировано умение покрывать тестами реализованную функциональность (можно только бизнес часть)

Требования к среде разработки:
Разработка должна вестись на Swift с использованием любых сторонних библиотек

Требования к результату работ:
1.    Исходный код приложения должен быть предоставлен в объёме, достаточном для сборки
2.    Отдельное внимание уделите оформлению, читабельности и чистоте кода! (Всё по Дяде Бобу)
3.    При анализе результатов работы замечания будут учитываться со следующими приоритетами:
i.    Аварийное завершение работы ПО («падение») – неприемлемо
ii.    Неверное поведение реализованных функций – плохо
iii.    Отсутствие каких-либо функций, описанных в данном задании – удовлетворительно (желательно наличие пояснения, почему не удалось реализовать функцию)
(Таким образом, основная задача – реализовать максимальное количество законченных функций, лучше одна работающая функция, чем десяток неработающих или приводящих к аварийному завершению)

